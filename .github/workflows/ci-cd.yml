name: AURAPOS CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # JOB 1: Build and Unit Tests
  build-and-unit-tests:
    name: Build and Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install and Build React App
      run: |
        cd client
        npm ci
        npm run build
        
    - name: Run React Unit Tests
      run: |
        cd client
        npm test -- --watchAll=false --coverage
      
    - name: Setup Backend Environment
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run Backend Unit Tests
      run: |
        cd backend
        npm test -- --coverage --passWithNoTests

  # JOB 2: Integration and BDD Tests
  integration-tests:
    name: Integration and BDD Tests
    runs-on: ubuntu-latest
    needs: build-and-unit-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci
        
    - name: Start Backend Server and Run BDD Tests
      run: |
        cd backend
        # Start server and run tests in one command to ensure server is running
        npm start &
        SERVER_PID=$!
        sleep 15
        
        # Run BDD tests
        npm run test:bdd
        
        # Stop server after tests
        kill $SERVER_PID

  # JOB 3: E2E Automation Tests
  e2e-tests:
    name: End-to-End Automation Tests
    runs-on: ubuntu-latest
    needs: integration-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci
        
    - name: Install Frontend Dependencies
      run: |
        cd client
        npm ci
        
    - name: Install Test Dependencies
      run: npm ci
        
    - name: Setup Chrome for Selenium
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Start Full Stack Application
      run: |
        # Start backend
        cd backend
        npm start &
        BACKEND_PID=$!
        
        # Start frontend
        cd ../client
        npm start &
        FRONTEND_PID=$!
        
        echo "Backend PID: $BACKEND_PID"
        echo "Frontend PID: $FRONTEND_PID"
        
        # Wait for servers to be ready
        sleep 20
        
        # Verify servers are running
        curl -f http://localhost:5000 || exit 1
        curl -f http://localhost:3000 || exit 1
        
    - name: Run E2E Automation Tests
      run: |
        # Run login test
        node tests/ui/login-working-test.js
        
        # Run add-to-cart test
        node tests/ui/add-to-cart-working.js
        
    - name: Cleanup Servers
      run: |
        pkill -f "node.*start" || true
        sleep 5

  # JOB 4: Success Notification (Only runs if all previous jobs pass)
  success:
    name: Pipeline Success
    runs-on: ubuntu-latest
    needs: [build-and-unit-tests, integration-tests, e2e-tests]
    if: success()
    
    steps:
    - name: Generate Test Report
      run: |
        echo "=================================================================="
        echo "AURAPOS CI/CD PIPELINE - QUALITY GATES PASSED"
        echo "=================================================================="
        echo "BUILD STATUS: SUCCESS"
        echo "UNIT TESTS: TDD ALL PASSED"
        echo "INTEGRATION TESTS: BDD ALL PASSED" 
        echo "AUTOMATION TESTS: Selenium UI Testing ALL PASSED"
        echo "ALL TESTS EXECUTED SUCCESSFULLY"
        echo "=================================================================="
        echo "DEPLOYMENT APPROVED: Ready for production"
        echo "=================================================================="